<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wms.warehouse.storeio.mapper.StoreIoSonMapper">
    
    <resultMap type="StoreIoSon" id="StoreIoSonResult">
        <result property="id"    column="Id"    />
        <result property="rowid"    column="RowId"    />
        <result property="taskcode"    column="TaskCode"    />
        <result property="productcode"    column="ProductCode"    />
        <result property="productname"    column="ProductName"    />
        <result property="productmodel"    column="ProductModel"    />
        <result property="productbatch"    column="ProductBatch"    />
        <result property="quantity"    column="Quantity"    />
        <result property="taskstate"    column="TaskState"    />
        <result property="memo"    column="Memo"    />
        <result property="createuser"    column="CreateUser"    />
        <result property="createdate"    column="CreateDate"    />
        <result property="guid"    column="GUID"    />
        <result property="f1"    column="F1"    />
        <result property="f2"    column="F2"    />
        <result property="f3"    column="F3"    />
        <result property="f4"    column="F4"    />
        <result property="otherProductCode"    column="OtherProductCode"    />
    </resultMap>

    <sql id="selectStoreIoSonVo">
        select Id, RowId, TaskCode, ProductCode, ProductName, ProductModel, Quantity, TaskState, Memo, CreateUser, CreateDate, GUID, F1, F2, F3, F4,OtherProductCode from T_Base_StoreIoSon
    </sql>

    <select id="selectStoreIoSonList" parameterType="StoreIoSon" resultMap="StoreIoSonResult">
        select i.Id, i.RowId, i.TaskCode, i.ProductCode, i.ProductName, i.ProductModel,i.ProductBatch, i.Quantity, i.TaskState, i.Memo,i.StartCode,
        i.CreateUser, i.CreateDate, i.GUID, i.F1, i.F2, i.F3, i.F4,i.OtherProductCode,s.StorehouseName
        from T_Base_StoreIoSon i
        left join T_Scan_Main sm on i.TaskCode=sm.TaskCode and i.RowId=sm.RowId and sm.IsDelete = 0 and sm.IsEnable=1
        left join T_Base_Storehouse s on sm.StorehouseCode=s.StorehouseCode
        <where>
          and i.IsDelete=0 and i.IsEnable=1
            <if test="id != null "> and i.Id = #{id}</if>
            <if test="taskcode != null  and taskcode != ''"> and i.TaskCode = #{taskcode}</if>
            <if test="productcode != null  and productcode != ''"> and i.ProductCode = #{productcode}</if>
            <if test="productname != null  and productname != ''"> and i.ProductName like concat('%', #{productname}, '%')</if>
            <if test="productmodel != null  and productmodel != ''"> and i.ProductModel = #{productmodel}</if>
            <if test="quantity != null "> and i.Quantity = #{quantity}</if>
            <if test="taskstate != null  and taskstate != ''"> and i.TaskState = #{taskstate}</if>
            <if test="memo != null  and memo != ''"> and i.Memo = #{memo}</if>
            <if test="createuser != null  and createuser != ''"> and i.CreateUser = #{createuser}</if>
            <if test="createdate != null "> and i.CreateDate = #{createdate}</if>
            <if test="guid != null  and guid != ''"> and i.GUID = #{guid}</if>
            <if test="f1 != null  and f1 != ''"> and i.F1 = #{f1}</if>
            <if test="f2 != null  and f2 != ''"> and i.F2 = #{f2}</if>
            <if test="f3 != null  and f3 != ''"> and i.F3 = #{f3}</if>
            <if test="f4 != null "> and i.F4 = #{f4}</if>
        </where>
    </select>

    <select id="selectStoreIoOutSonList" parameterType="StoreIoSon" resultMap="StoreIoSonResult">
        select i.Id, i.RowId, i.TaskCode, i.ProductCode, i.ProductName, i.ProductModel,i.ProductBatch, i.Quantity, i.TaskState, i.Memo,i.StartCode,
        i.CreateUser, i.CreateDate, i.GUID, i.F1, i.F2, i.F3, i.F4,i.OtherProductCode,s.StorehouseName
        from T_Base_StoreIoSon i
        left join T_Base_Storehouse s on i.StartCode=s.StorehouseCode
        <where>
            and i.IsDelete=0 and i.IsEnable=1
            <if test="id != null "> and i.Id = #{id}</if>
            <if test="taskcode != null  and taskcode != ''"> and i.TaskCode = #{taskcode}</if>
            <if test="productcode != null  and productcode != ''"> and i.ProductCode = #{productcode}</if>
            <if test="productname != null  and productname != ''"> and i.ProductName like concat('%', #{productname}, '%')</if>
            <if test="productmodel != null  and productmodel != ''"> and i.ProductModel = #{productmodel}</if>
            <if test="quantity != null "> and i.Quantity = #{quantity}</if>
            <if test="taskstate != null  and taskstate != ''"> and i.TaskState = #{taskstate}</if>
            <if test="memo != null  and memo != ''"> and i.Memo = #{memo}</if>
            <if test="createuser != null  and createuser != ''"> and i.CreateUser = #{createuser}</if>
            <if test="createdate != null "> and i.CreateDate = #{createdate}</if>
            <if test="guid != null  and guid != ''"> and i.GUID = #{guid}</if>
            <if test="f1 != null  and f1 != ''"> and i.F1 = #{f1}</if>
            <if test="f2 != null  and f2 != ''"> and i.F2 = #{f2}</if>
            <if test="f3 != null  and f3 != ''"> and i.F3 = #{f3}</if>
            <if test="f4 != null "> and i.F4 = #{f4}</if>
        </where>
    </select>
    
    <select id="selectStoreIoSonById" parameterType="Long" resultMap="StoreIoSonResult">
        <include refid="selectStoreIoSonVo"/>
        where RowId = #{rowid}
    </select>
        
    <insert id="insertStoreIoSon" parameterType="StoreIoSon">
        insert into T_Base_StoreIoSon
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null ">Id,</if>
            <if test="rowid != null ">RowId,</if>
            <if test="taskcode != null  and taskcode != ''">TaskCode,</if>
            <if test="productcode != null  and productcode != ''">ProductCode,</if>
            <if test="productname != null  and productname != ''">ProductName,</if>
            <if test="productmodel != null  and productmodel != ''">ProductModel,</if>
            <if test="quantity != null ">Quantity,</if>
            <if test="taskstate != null  and taskstate != ''">TaskState,</if>
            <if test="memo != null  and memo != ''">Memo,</if>
            <if test="createuser != null  and createuser != ''">CreateUser,</if>
            <if test="createdate != null ">CreateDate,</if>
            <if test="guid != null  and guid != ''">GUID,</if>
            <if test="f1 != null  and f1 != ''">F1,</if>
            <if test="f2 != null  and f2 != ''">F2,</if>
            <if test="f3 != null  and f3 != ''">F3,</if>
            <if test="f4 != null ">F4,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null ">#{id},</if>
            <if test="rowid != null ">#{rowid},</if>
            <if test="taskcode != null  and taskcode != ''">#{taskcode},</if>
            <if test="productcode != null  and productcode != ''">#{productcode},</if>
            <if test="productname != null  and productname != ''">#{productname},</if>
            <if test="productmodel != null  and productmodel != ''">#{productmodel},</if>
            <if test="quantity != null ">#{quantity},</if>
            <if test="taskstate != null  and taskstate != ''">#{taskstate},</if>
            <if test="memo != null  and memo != ''">#{memo},</if>
            <if test="createuser != null  and createuser != ''">#{createuser},</if>
            <if test="createdate != null ">#{createdate},</if>
            <if test="guid != null  and guid != ''">#{guid},</if>
            <if test="f1 != null  and f1 != ''">#{f1},</if>
            <if test="f2 != null  and f2 != ''">#{f2},</if>
            <if test="f3 != null  and f3 != ''">#{f3},</if>
            <if test="f4 != null ">#{f4},</if>
         </trim>
    </insert>

    <update id="updateStoreIoSon" parameterType="StoreIoSon">
        update T_Base_StoreIoSon
        <trim prefix="SET" suffixOverrides=",">
            <if test="id != null ">Id = #{id},</if>
            <if test="taskcode != null  and taskcode != ''">TaskCode = #{taskcode},</if>
            <if test="productcode != null  and productcode != ''">ProductCode = #{productcode},</if>
            <if test="productname != null  and productname != ''">ProductName = #{productname},</if>
            <if test="productmodel != null  and productmodel != ''">ProductModel = #{productmodel},</if>
            <if test="quantity != null ">Quantity = #{quantity},</if>
            <if test="taskstate != null  and taskstate != ''">TaskState = #{taskstate},</if>
            <if test="memo != null  and memo != ''">Memo = #{memo},</if>
            <if test="createuser != null  and createuser != ''">CreateUser = #{createuser},</if>
            <if test="createdate != null ">CreateDate = #{createdate},</if>
            <if test="guid != null  and guid != ''">GUID = #{guid},</if>
            <if test="f1 != null  and f1 != ''">F1 = #{f1},</if>
            <if test="f2 != null  and f2 != ''">F2 = #{f2},</if>
            <if test="f3 != null  and f3 != ''">F3 = #{f3},</if>
            <if test="f4 != null ">F4 = #{f4},</if>
        </trim>
        where RowId = #{rowid}
    </update>

    <delete id="deleteStoreIoSonById" parameterType="Long">
        delete from T_Base_StoreIoSon where RowId = #{rowid}
    </delete>

    <delete id="deleteStoreIoSonByIds" parameterType="String">
        delete from T_Base_StoreIoSon where RowId in 
        <foreach item="rowid" collection="array" open="(" separator="," close=")">
            #{rowid}
        </foreach>
    </delete>
    
    <insert id="insertStoreIoSonList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into T_Base_StoreIoSon (RowId, TaskCode, ProductCode, ProductName, ProductModel,ProductBatch, Quantity, Memo,
         CreateUser, CreateDate, GUID, F1, F2, F3, F4,StartCode,OtherProductCode)
        <foreach collection="list" item="item" open="values(" separator="),(" close=")">
            #{item.rowid}, #{item.taskcode}, #{item.productcode}, #{item.productname}, #{item.productmodel},#{item.productbatch}, #{item.quantity},
             #{item.memo},#{item.createuser}, #{item.createdate}, #{item.guid}, #{item.f1}, #{item.f2}, #{item.f3}, #{item.f4}, #{item.startcode}, #{item.otherProductCode}
        </foreach>
    </insert>
    <insert id="insertStoreIoTraySonList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into T_Base_StoreIoSon (RowId, TaskCode,Quantity,StartCode,F1,CreateUser, CreateDate)
        <foreach collection="list" item="item" open="values(" separator="),(" close=")">
            #{item.rowid}, #{item.taskcode}, #{item.quantity},#{item.startcode},#{item.f1},#{item.createuser}, #{item.createdate}
        </foreach>
    </insert>

    <update id="updateStoreIoSonList" parameterType="java.util.List">
        update T_Base_StoreIoSon set
        Quantity  =
        <foreach collection="list" item="item" open="case id" separator=" " close=" END,">
            when #{item.id} then #{item.quantity}
        </foreach>
        Memo  =
        <foreach collection="list" item="item" open="case id" separator=" " close=" END,">
            when #{item.id} then #{item.memo}
        </foreach>
        ProductBatch =
        <foreach collection="list" item="item" open="case id" separator=" " close=" END">
            when #{item.id} then #{item.productbatch}
        </foreach>
        <where>
            id in
            <foreach collection="list" item="item" open="(" separator="," close=")">
                #{item.id}
            </foreach>
        </where>
    </update>

    <update id="deleteStoreIoSonByIdList" parameterType="java.util.List">
        update T_Base_StoreIoSon
        set IsDelete=1
        where Id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </update>
    <update id="deleteStoreIoTraySonByIdList" parameterType="java.util.List">
        delete T_Base_StoreIoSon
        where Id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </update>

    <update id="deleteStoreIoSonByTaskCodes" parameterType="String" >
        update T_Base_StoreIoSon
        set IsDelete=1
        where TaskCode in
        <foreach collection="array" item="taskcode" open="(" separator="," close=")">
            #{taskcode}
        </foreach>
    </update>

    <update id="cancelStoreIoSonByTaskCodes" parameterType="String" >
        update T_Base_StoreIoSon
        set TaskState=-1
        where TaskCode in
        <foreach collection="array" item="taskcode" open="(" separator="," close=")">
            #{taskcode}
        </foreach>
    </update>

    <update id="executeStoreIoSonByTaskCodes" parameterType="String" >
        update T_Base_StoreIoSon
        set TaskState=1
        where TaskCode in
        <foreach collection="array" item="taskcode" open="(" separator="," close=")">
            #{taskcode}
        </foreach>
    </update>

    <update id="restartStoreIoSonByTaskCodes" parameterType="String" >
        update T_Base_StoreIoSon
        set TaskState=0
        where TaskCode in
        <foreach collection="array" item="taskcode" open="(" separator="," close=")">
            #{taskcode}
        </foreach>
    </update>

    <select id="selectStoreIoList" parameterType="StoreIoSon" resultType="StoreIoSon">
        select s.id, s.rowid, s.taskcode, s.productcode, s.productname, s.productmodel,s.productbatch, s.quantity, s.taskstate,s.StartCode, s.memo, s.createuser, s.createdate, s.guid, s.f1, s.f2, s.f3, s.f4, s.isdelete, s.isenable,isnull(t.Quantity,0) as quantityInfo,sh.StorehouseName,s.OtherProductCode
        from T_Base_StoreIoSon s
        left join (select ProductCode,SUM(Quantity) as Quantity from T_Base_Stock where IsDelete=0 and IsEnable=1 group BY ProductCode) t on t.ProductCode=s.ProductCode
        left join T_Base_Storehouse sh on s.StartCode=sh.StorehouseCode
        <where>
            and s.IsDelete=0
            and s.IsEnable=1
            <if test="id != null "> and s.Id = #{id}</if>
            <if test="taskcode != null  and taskcode != ''"> and s.TaskCode = #{taskcode}</if>
            <if test="productcode != null  and productcode != ''"> and s.ProductCode = #{productcode}</if>
            <if test="productname != null  and productname != ''"> and s.ProductName like concat('%', #{productname}, '%')</if>
            <if test="productmodel != null  and productmodel != ''"> and s.ProductModel = #{productmodel}</if>
            <if test="quantity != null "> and s.Quantity = #{quantity}</if>
            <if test="taskstate != null  and taskstate != ''"> and s.TaskState = #{taskstate}</if>
            <if test="memo != null  and memo != ''"> and s.Memo = #{memo}</if>
            <if test="createuser != null  and createuser != ''"> and s.CreateUser = #{createuser}</if>
            <if test="createdate != null "> and s.CreateDate = #{createdate}</if>
            <if test="guid != null  and guid != ''"> and s.GUID = #{guid}</if>
            <if test="f1 != null  and f1 != ''"> and s.F1 = #{f1}</if>
            <if test="f2 != null  and f2 != ''"> and s.F2 = #{f2}</if>
            <if test="f3 != null  and f3 != ''"> and s.F3 = #{f3}</if>
            <if test="f4 != null "> and s.F4 = #{f4}</if>
        </where>
    </select>


    <update id="deleteStoreIoTraySonByNotList">
        update T_Base_StoreIoSon set IsDelete=1
        where taskCode=#{taskCode} and Id not in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </update>
    
</mapper>